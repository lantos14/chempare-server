{"version":3,"sources":["../src/server.js"],"names":["app","bodyParser","require","routerDB","routerUser","routerTest","PORT","process","env","config","use","urlencoded","extended","express","json","mongoose","mongoDB","DB_USERNAME","DB_PWD","connect","Promise","global","db","connection","on","console","error","bind","get","req","res","listen","log","cron","schedule"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,aAAaC,QAAQ,aAAR,CAAnB;;eAC6CA,QAAQ,WAAR,C;IAArCC,Q,YAAAA,Q;IAAUC,U,YAAAA,U;IAAYC,U,YAAAA,U;;AAC9B,IAAMC,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAEAJ,QAAQ,QAAR,EAAkBO,MAAlB;;AAEAT,IAAIU,GAAJ,CAAQT,WAAWU,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAZ,IAAIU,GAAJ,CAAQG,kBAAQC,IAAR,EAAR;;AAEA;AACA,IAAMC,WAAWb,QAAQ,UAAR,CAAjB;AACA,IAAMc,6BAA2BT,QAAQC,GAAR,CAAYS,WAAvC,SAAsDV,QAAQC,GAAR,CAAYU,MAAlE,6DAAN;AACAH,SAASI,OAAT,CAAiBH,OAAjB;AACAD,SAASK,OAAT,GAAmBC,OAAOD,OAA1B;AACA,IAAME,KAAKP,SAASQ,UAApB;AACAD,GAAGE,EAAH,CAAM,OAAN,EAAeC,QAAQC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,2BAA5B,CAAf;;AAEA;;AAEAzB,IAAIU,GAAJ,CAAQP,QAAR;AACAH,IAAIU,GAAJ,CAAQN,UAAR;AACAJ,IAAIU,GAAJ,CAAQL,UAAR;;AAEAL,IAAI4B,GAAJ,CAAQ,OAAR,EAAiB,gBAAOC,GAAP,EAAYC,GAAZ,EAAoB;;AAEnCA,MAAIhB,IAAJ,CAAS;AACP,WAAO;AADA,GAAT;AAGD,CALD;;AAOAd,IAAI+B,MAAJ,CAAWzB,IAAX,EAAiB,YAAM;AACrBmB,UAAQO,GAAR,gCAAyC1B,IAAzC;AACD,CAFD;;AAIA;;AAEA2B,mBAAKC,QAAL,CAAc,WAAd,EAA2B,YAAM;AAC/BT,UAAQO,GAAR,CAAY,qCAAZ;;AAEA;AACD,CAJD","file":"server.js","sourcesContent":["import express from 'express';\r\nimport cron from 'node-cron';\r\nimport handleData from './scheduler/index';\r\n\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\nconst { routerDB, routerUser, routerTest } = require('./routers');\r\nconst PORT = process.env.PORT || 3000;\r\n\r\nrequire('dotenv').config()\r\n\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(express.json());\r\n\r\n// Set up mongoose connection\r\nconst mongoose = require('mongoose');\r\nconst mongoDB = `mongodb+srv://${process.env.DB_USERNAME}:${process.env.DB_PWD}@duri-products-euhwc.mongodb.net/duriDB?retryWrites=true`;\r\nmongoose.connect(mongoDB);\r\nmongoose.Promise = global.Promise;\r\nconst db = mongoose.connection;\r\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\n// routes\r\n\r\napp.use(routerDB);\r\napp.use(routerUser);\r\napp.use(routerTest);\r\n\r\napp.get('/test', async (req, res) => {\r\n\r\n  res.json({\r\n    'msg': 'Server is up and running',\r\n  });\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on port ${PORT}`);\r\n});\r\n\r\n// initiate schedule\r\n\r\ncron.schedule('0 0 * * *', () => {\r\n  console.log('---log: daily data fetching started');\r\n\r\n  handleData();\r\n});\r\n"]}