{"version":3,"sources":["../../src/routers/db.route.js"],"names":["routerDB","express","Router","route","get","req","res","next","Product","find","limit","exec","err","products","json","post","headers","authorization","process","env","SECRET","status","send","productList","productCategories","result","fetchList","forEach","productCategoryList","product_instance","product","img","name","price","store","type","save","handleError","delete","deleteMany","console","error","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAWC,kBAAQC,MAAR,EAAjB;;AAEAF,SACGG,KADH,CACS,WADT,EAGGC,GAHH,CAGO,gBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;;AAE7BC,oBAAQC,IAAR,GACCC,KADD,CACO,EADP,EAECC,IAFD,CAEM,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACvB,WAAOP,IAAIQ,IAAJ,CAAS,EAAED,kBAAF,EAAT,CAAP;AACD,GAJD;AAKD,CAVH,EAaGE,IAbH,CAaQ,gBAAOV,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;;AAE9B,MAAIF,IAAIW,OAAJ,CAAYC,aAAZ,KAA8BC,QAAQC,GAAR,CAAYC,MAA9C,EAAsD;AACpD,WAAOd,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CAAP;AACD;AACD;AACA,MAAMC,cAAc,IAAIC,mBAAJ,EAApB;AACA,MAAMC,SAAS,MAAM,gCAAiBF,YAAYG,SAA7B,CAArB;;AAEA,QAAMD,OAAOE,OAAP,CAAe,+BAAuB;AAC1CC,wBAAoBD,OAApB,CAA4B,mBAAW;;AAErC;AACA,UAAME,mBAAmB,IAAIrB,iBAAJ,CAAY;AACnC,eAAOsB,QAAQC,GADoB;AAEnC,gBAAQD,QAAQE,IAFmB;AAGnC,iBAASF,QAAQG,KAHkB;AAInC,iBAASH,QAAQI,KAJkB;AAKnC,gBAAQJ,QAAQK;AALmB,OAAZ,CAAzB;;AAQA;AACAN,uBAAiBO,IAAjB,CAAsB,UAAUxB,GAAV,EAAe;AACnC,YAAIA,GAAJ,EAAS,OAAOyB,YAAYzB,GAAZ,CAAP;AAEV,OAHD;AAID,KAhBD;AAiBD,GAlBK,CAAN;;AAoBA,SAAON,IAAIQ,IAAJ,CAAS;AACd,cAAU,IADI;AAEd,qBAAiB,gCAAiBW,MAAjB;AAFH,GAAT,CAAP;AAID,CA9CH,EAgDGa,MAhDH,CAgDU,gBAAOjC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAChCC,oBAAQ+B,UAAR,CAAmB,EAAnB,EAAwB,UAAC3B,GAAD,EAAS;AAC/B,WAAON,IAAIQ,IAAJ,CAAS,EAAEW,QAAQ,SAAV,EAAT,CAAP;AACD,GAFD;AAGD,CApDH;;AAsDE,IAAMY,cAAc,SAAdA,WAAc,CAAUzB,GAAV,EAAe;AACnC4B,UAAQC,KAAR,CAAc7B,GAAd;AACA;AACD,CAHC;;AAKF8B,OAAOC,OAAP,GAAiB3C,QAAjB","file":"db.route.js","sourcesContent":["import express from 'express';\r\nimport Product from '../models/product.model';\r\nimport scrapeController from '../Scrapers/scrapeController';\r\nimport productCategories from '../Scrapers/catFilter';\r\nimport countProductsSum from '../utilities/countProductsSum';\r\n\r\nconst routerDB = express.Router();\r\n\r\nrouterDB\r\n  .route('/products')\r\n\r\n  .get(async (req, res, next) => {\r\n\r\n    Product.find()\r\n    .limit(10)\r\n    .exec((err, products) => {\r\n      return res.json({ products });\r\n    });\r\n  })\r\n\r\n  \r\n  .post(async (req, res, next) => {\r\n    \r\n    if (req.headers.authorization !== process.env.SECRET) {\r\n      return res.status(401).send(\"401 - Not authorized\");\r\n    }\r\n    // start the scraping\r\n    const productList = new productCategories;\r\n    const result = await scrapeController(productList.fetchList);\r\n    \r\n    await result.forEach(productCategoryList => {\r\n      productCategoryList.forEach(product => {\r\n        \r\n        // Create an instance of model Product\r\n        const product_instance = new Product({\r\n          \"img\": product.img,\r\n          \"name\": product.name,\r\n          \"price\": product.price,\r\n          \"store\": product.store,\r\n          \"type\": product.type,\r\n        });\r\n        \r\n        // Save the new model instance, passing a callback\r\n        product_instance.save(function (err) {\r\n          if (err) return handleError(err);\r\n          \r\n        });\r\n      });\r\n    })\r\n    \r\n    return res.json({\r\n      \"status\": \"ok\",\r\n      \"ProductsFound\": countProductsSum(result),\r\n    });\r\n  })\r\n  \r\n  .delete(async (req, res, next) => {\r\n    Product.deleteMany({ }, (err) => {\r\n      return res.json({ result: \"success\" });\r\n    });\r\n  });\r\n\r\n  const handleError = function (err) {\r\n  console.error(err);\r\n  // handle your error\r\n};\r\n\r\nmodule.exports = routerDB;"]}