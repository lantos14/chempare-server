{"version":3,"sources":["../../src/routers/db.route.js"],"names":["routerDB","express","Router","route","get","req","res","next","limit","parseInt","query","console","log","Product","find","store","type","exec","err","products","json","post","headers","authorization","process","env","SECRET","status","send","delete","deleteMany","result","handleError","error","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAWC,kBAAQC,MAAR,EAAjB;;AAEAF,SACGG,KADH,CACS,WADT,EAGGC,GAHH,CAGO,gBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC7B,MAAMC,QAAQC,SAASJ,IAAIK,KAAJ,CAAUF,KAAnB,KAA6B,EAA3C;AACAG,UAAQC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB;AACAK,oBAAQC,IAAR,CAAa;AACXC,WAAO,CAAC,QAAD,CADI;AAEXC,UAAM,CAAC,kBAAD;AAFK,GAAb,EAICR,KAJD,CAIOA,KAJP,EAKCS,IALD,CAKM,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACvB,WAAOb,IAAIc,IAAJ,CAAS,EAAED,kBAAF,EAAT,CAAP;AACD,GAPD;AAQD,CAdH,EAiBGE,IAjBH,CAiBQ,gBAAOhB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;;AAE9B,MAAIF,IAAIiB,OAAJ,CAAYC,aAAZ,KAA8BC,QAAQC,GAAR,CAAYC,MAA9C,EAAsD;AACpD,WAAOpB,IAAIqB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CAAP;AACD;AACD;AACA,MAAMD,SAAS,MAAM,0BAArB;;AAEA,SAAOrB,IAAIc,IAAJ,CAAS;AACdO;AADc,GAAT,CAAP;AAGD,CA5BH,EA8BGE,MA9BH,CA8BU,gBAAOxB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAChCM,oBAAQiB,UAAR,CAAmB,EAAnB,EAAwB,UAACZ,GAAD,EAAS;AAC/B,WAAOZ,IAAIc,IAAJ,CAAS,EAAEW,QAAQ,SAAV,EAAT,CAAP;AACD,GAFD;AAGD,CAlCH;;AAoCE,IAAMC,cAAc,SAAdA,WAAc,CAAUd,GAAV,EAAe;AACnCP,UAAQsB,KAAR,CAAcf,GAAd;AACA;AACD,CAHC;;AAKFgB,OAAOC,OAAP,GAAiBnC,QAAjB","file":"db.route.js","sourcesContent":["import express from 'express';\r\nimport Product from '../models/product.model';\r\nimport handleData from '../scheduler';\r\n\r\nconst routerDB = express.Router();\r\n\r\nrouterDB\r\n  .route('/products')\r\n\r\n  .get(async (req, res, next) => {\r\n    const limit = parseInt(req.query.limit) || 30;\r\n    console.log('limit: ', limit);\r\n    Product.find({\r\n      store: ['promod'],\r\n      type: ['pulover-kardigan']\r\n    })\r\n    .limit(limit)\r\n    .exec((err, products) => {\r\n      return res.json({ products });\r\n    });\r\n  })\r\n\r\n  \r\n  .post(async (req, res, next) => {\r\n    \r\n    if (req.headers.authorization !== process.env.SECRET) {\r\n      return res.status(401).send(\"401 - Not authorized\");\r\n    }\r\n    // start the scraping\r\n    const status = await handleData();\r\n\r\n    return res.json({\r\n      status,\r\n    });\r\n  })\r\n  \r\n  .delete(async (req, res, next) => {\r\n    Product.deleteMany({ }, (err) => {\r\n      return res.json({ result: \"success\" });\r\n    });\r\n  });\r\n\r\n  const handleError = function (err) {\r\n  console.error(err);\r\n  // handle your error\r\n};\r\n\r\nmodule.exports = routerDB;"]}