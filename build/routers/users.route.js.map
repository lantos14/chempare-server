{"version":3,"sources":["../../src/routers/users.route.js"],"names":["routerUser","express","Router","route","get","req","res","headers","authorization","process","env","SECRET","status","send","User","find","err","users","json","post","body","username","email","password","user_instance","save","handleError","console","error","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAMA,aAAaC,kBAAQC,MAAR,EAAnB;;AAEAF,WACGG,KADH,CACS,QADT,EAGGC,GAHH,CAGO,gBAAOC,GAAP,EAAYC,GAAZ,EAAoB;AACvB,MAAID,IAAIE,OAAJ,CAAYC,aAAZ,KAA8BC,QAAQC,GAAR,CAAYC,MAA9C,EAAsD;AACpD,WAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CAAP;AACD;;AAEDC,iBAAKC,IAAL,CAAU,EAAV,EAAe,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC7B,WAAOX,IAAIY,IAAJ,CAAS,EAAED,YAAF,EAAT,CAAP;AACD,GAFD;AAGD,CAXH,EAcGE,IAdH,CAcQ,gBAAOd,GAAP,EAAYC,GAAZ,EAAoB;AACxB,MAAID,IAAIE,OAAJ,CAAYC,aAAZ,KAA8BC,QAAQC,GAAR,CAAYC,MAA9C,EAAsD;AACpD,WAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CAAP;AACD;;AAED;;AAEA,MAAIR,IAAIe,IAAJ,CAASC,QAAT,IAAqBhB,IAAIe,IAAJ,CAASE,KAA9B,IAAuCjB,IAAIe,IAAJ,CAASG,QAApD,EAA8D;;AAE5D,QAAMC,gBAAgB,IAAIV,cAAJ,CAAS;AAC7B,kBAAYT,IAAIe,IAAJ,CAASC,QADQ;AAE7B,eAAShB,IAAIe,IAAJ,CAASE,KAFW;AAG7B,kBAAYjB,IAAIe,IAAJ,CAASG;AAHQ,KAAT,CAAtB;;AAMA;AACAC,kBAAcC,IAAd,CAAmB,UAAUT,GAAV,EAAe;AAChC,UAAIA,GAAJ,EAAS,OAAOU,YAAYV,GAAZ,CAAP;AAEV,KAHD;AAID;AACD,SAAOV,IAAIY,IAAJ,CAAS;AACd,cAAU,IADI;AAEd,WAAO;AAFO,GAAT,CAAP;AAKD,CAxCH;;AA0CE,IAAMQ,cAAc,SAAdA,WAAc,CAAUV,GAAV,EAAe;AACnCW,UAAQC,KAAR,CAAcZ,GAAd;AACA;AACD,CAHC;;AAKFa,OAAOC,OAAP,GAAiB9B,UAAjB","file":"users.route.js","sourcesContent":["import express from 'express';\r\nimport User from '../models/user.model';\r\n\r\nconst routerUser = express.Router();\r\n\r\nrouterUser\r\n  .route('/users')\r\n\r\n  .get(async (req, res) => {\r\n    if (req.headers.authorization !== process.env.SECRET) {\r\n      return res.status(401).send(\"401 - Not authorized\");\r\n    }\r\n\r\n    User.find({ }, (err, users) => {\r\n      return res.json({ users });\r\n    });\r\n  })\r\n\r\n  \r\n  .post(async (req, res) => {\r\n    if (req.headers.authorization !== process.env.SECRET) {\r\n      return res.status(401).send(\"401 - Not authorized\");\r\n    }\r\n    \r\n    // req validation\r\n\r\n    if (req.body.username && req.body.email && req.body.password) {\r\n\r\n      const user_instance = new User({\r\n        \"username\": req.body.username,\r\n        \"email\": req.body.email,\r\n        \"password\": req.body.password,\r\n      });\r\n      \r\n      // Save the new model instance, passing a callback\r\n      user_instance.save(function (err) {\r\n        if (err) return handleError(err);\r\n        \r\n      });\r\n    }\r\n    return res.json({\r\n      \"status\": \"ok\",\r\n      \"msg\": \"User has been succesfully stored\",\r\n    });\r\n    \r\n  });\r\n\r\n  const handleError = function (err) {\r\n  console.error(err);\r\n  // handle your error\r\n};\r\n\r\nmodule.exports = routerUser;"]}